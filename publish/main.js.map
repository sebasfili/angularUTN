{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/catalogo/catalogo.component.ts","./src/app/catalogo/catalogo.component.html","./src/app/detalle/detalle.component.ts","./src/app/detalle/detalle.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/registro/registro.component.ts","./src/app/registro/registro.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DetalleComponent } from './detalle/detalle.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'detalle', component: DetalleComponent },\r\n  { path: 'registro', component: RegistroComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-final';\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <span>e-comerce</span>  \r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\n\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DetalleComponent } from './detalle/detalle.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CatalogoComponent } from './catalogo/catalogo.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DetalleComponent,\r\n    HomeComponent,\r\n    CatalogoComponent,\r\n    RegistroComponent,\r\n    NotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n  ],\r\n\r\n  exports: [MatIconModule,],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-catalogo',\r\n  templateUrl: './catalogo.component.html',\r\n  styleUrls: ['./catalogo.component.css']\r\n})\r\nexport class CatalogoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>catalogo works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-detalle',\r\n  templateUrl: './detalle.component.html',\r\n  styleUrls: ['./detalle.component.css']\r\n})\r\nexport class DetalleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>detalle works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      user: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.loginForm.valid) {\r\n      this.submitted = true;\r\n    }\r\n    else{\r\n      this.submitted = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"container\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"user\">Usuario: </mat-label> <br>\r\n            <input matInput type=\"email\" formControlName=\"user\" placeholder=\"usuario\" required>\r\n            <div [ngStyle]=\"{'color':'red'}\"\r\n                *ngIf=\"loginForm.get('user').hasError('required') && loginForm.get('user').touched\">\r\n                El nombre de usuario es obligatorio\r\n            </div>\r\n            <div [ngStyle]=\"{'color':'red'}\"\r\n                *ngIf=\"loginForm.get('user').hasError('email') && loginForm.get('user').touched\">\r\n                El usuario debe tener el formato usuario@dominio.com\r\n            </div>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"password\">Password: </mat-label><br>\r\n            <input matInput type=\"password\" formControlName=\"password\" placeholder=\"contraseña\">\r\n            <div [ngStyle]=\"{'color':'red'}\"\r\n                *ngIf=\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\">\r\n                El password es obligatorio\r\n            </div>\r\n            <div [ngStyle]=\"{'color':'red'}\"\r\n                *ngIf=\"loginForm.get('password').hasError('minlength') && loginForm.get('password').touched\">\r\n                El password debe tener como mínimo 8 carácteres\r\n            </div>\r\n        </mat-form-field>\r\n        <div class=\"form-btn-ok\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Ingresar</button>\r\n            <div [ngStyle]=\"{'color':'green'}\" *ngIf=\"loginForm.valid && submitted\">\r\n                Ingreso exitoso!!!\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-found works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.css']\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted: boolean = false;\r\n  hide: boolean = true;\r\n  constructor(\r\n    public fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      phone: [''],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\r\n      rePassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\r\n    })\r\n  }\r\n  submit() {\r\n    if (this.registerForm.valid) {\r\n      this.submitted = true;\r\n    }\r\n    else {\r\n      this.submitted = false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\r\n\r\n    <div class=\"form-container\">\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label for=\"name\">Nombre: </mat-label> <br>\r\n            <input matInput type=\"text\" formControlName=\"name\" placeholder=\"Nombre\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"registerForm.get('name').hasError('required') && registerForm.get('name').touched\">\r\n                El nombre es obligatorio\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label for=\"lastName\">Apellido: </mat-label> <br>\r\n            <input matInput type=\"text\" formControlName=\"lastName\" placeholder=\"Apellido\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error\r\n                *ngIf=\"registerForm.get('lastName').hasError('required') && registerForm.get('lastName').touched\">\r\n                El apellido es obligatorio\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label for=\"phone\">Teléfono: </mat-label> <br>\r\n            <input matInput type=\"tel\" formControlName=\"phone\" placeholder=\"Teléfono\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label for=\"email\">Email: </mat-label> <br>\r\n            <input matInput type=\"email\" formControlName=\"email\" placeholder=\"E-mail\" required>\r\n            <mat-icon matSuffix>alternate_email</mat-icon>\r\n            <mat-error *ngIf=\"registerForm.get('email').hasError('required') && registerForm.get('email').touched\">\r\n                El email de usuario es obligatorio\r\n            </mat-error>\r\n            <mat-error *ngIf=\"registerForm.get('email').hasError('email') && registerForm.get('email').touched\">\r\n                El email debe tener el formato usuario@dominio.com\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label>Password:</mat-label>\r\n            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\r\n            <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </button>\r\n            <mat-error\r\n                *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\r\n                El password es obligatorio\r\n            </mat-error>\r\n            <mat-error *ngIf=\"(registerForm.get('password').hasError('minlength') \r\n        || registerForm.get('password').hasError('maxlength'))\r\n        && registerForm.get('password').touched\">\r\n                El password debe tener entre 6 y 10 carácteres\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"form-item\">\r\n            <mat-label>Password:</mat-label>\r\n            <input matInput formControlName=\"rePassword\" [type]=\"hide ? 'password' : 'text'\">\r\n            <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </button>\r\n            <mat-error\r\n                *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\r\n                El password es obligatorio\r\n            </mat-error>\r\n            <mat-error *ngIf=\"(registerForm.get('password').hasError('minlength') \r\n        || registerForm.get('password').hasError('maxlength'))\r\n        && registerForm.get('password').touched\">\r\n                El password debe tener entre 6 y 10 carácteres\r\n            </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"form-btn-ok\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\">Registrar</button>\r\n        <div [ngStyle]=\"{'color':'green'}\" *ngIf=\"registerForm.valid && submitted\">\r\n            Registro exitoso!!!\r\n        </div>\r\n    </div>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}